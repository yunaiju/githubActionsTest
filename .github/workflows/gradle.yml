# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD Docker

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:

    # GitHub Actions가 GitHub에 있는 내 프로젝트 코드를 서버로 가져오는 단계
    # 현재 workflow가 실행되는 runner 서버에 저장소 코드 다운로드
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build Spring Boot jar
      run: ./gradlew clean build -x test

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test

    - name: Deploy on server
      run: |
          # 기존 컨테이너 종료
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test
          docker stop spring-cicd-test || true
          docker rm spring-cicd-test || true
          docker run -d -p 80:8080 --name spring-cicd-test ${{ secrets.DOCKERHUB_USERNAME }}/spring-cicd-test
          docker system prune -f

  
